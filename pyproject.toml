[build-system]
requires = ["hatchling>=0.22.0"]
build-backend = "hatchling.build"

[project]
name = "mkdocs-click"
description = "An MkDocs extension to generate documentation for Click command line applications"
readme = "README.md"
license = "Apache-2.0"
keywords = ["click", "datadog", "mkdocs", "mkdocs-plugin"]
authors = [
    {name = "Datadog", email = "packages@datadoghq.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Typing :: Typed",
]
dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "click >=8.1",
    "markdown >=3.3",
    #min "importlib_metadata >=4.3",
]

[project.urls]
Source = "https://github.com/mkdocs/mkdocs-click"
Issues = "https://github.com/mkdocs/mkdocs-click/issues"
Changelog = "https://github.com/mkdocs/mkdocs-click/blob/master/CHANGELOG.md"

[project.entry-points."markdown.extensions"]
mkdocs-click = "mkdocs_click:MKClickExtension"

[tool.hatch.version]
path = "mkdocs_click/__version__.py"

[tool.hatch.build.targets.sdist]
include = ["/mkdocs_click", "/CHANGELOG.md", "/tests"]

[tool.hatch.envs.default.scripts]
all = [
    "hatch run style:fix",
    "hatch run types:check",
    "hatch run test:test",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "mkdocs >=1.1.2",
    #min "jinja2 >=2.11.1",
    #min "markupsafe >=2.0.1",
]
[tool.hatch.envs.test.scripts]
test = [
    "pytest -q",
    "bash .tools/test.sh",
]

[tool.hatch.envs.types]
dependencies = [
    "mypy",
    "types-Markdown >=3.4.2",
]
[tool.hatch.envs.types.scripts]
check = [
    "mypy mkdocs_click"
]

[tool.hatch.envs.style]
skip-install = true
dependencies = [
    "ruff",
]
[tool.hatch.envs.style.scripts]
fix = [
    "ruff check --fix mkdocs_click tests",
    "format",
]
format = [
    "ruff format -q mkdocs_click tests",
]

[tool.ruff]
line-length = 100
select = [
    "I",
    "F", "W", "E", "UP", "YTT", "C4", "DTZ", "FA", "ISC", "PIE", "T20", "RSE", "TCH",
    "B002", "B003", "B005", "B007", "B009", "B012", "B013", "B014", "B015", "B018", "B020", "B021", "B023", "B026", "B033", "B034", "B905",
    "COM818",
    "PERF101",
    "PGH002", "PGH004", "PGH005",
    "FLY002",
    "PLC", "PLE", "PLR0124", "PLR0133", "PLR0206", "PLR0402", "PLR1701", "PLR1722", "PLW0120", "PLW0127", "PLW0129", "PLW0131", "PLW0406", "PLW0602", "PLW0603", "PLW0711",
    "RUF001", "RUF005", "RUF007", "RUF010", "RUF013", "RUF100", "RUF200",
    "SIM101", "SIM107", "SIM201", "SIM202", "SIM208", "SIM210", "SIM211", "SIM300", "SIM401", "SIM910",
]
ignore = ["E501", "E731"]
[tool.ruff.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.mypy]
disallow_untyped_defs = true
warn_unreachable = true
allow_redefinition = true

[tool.pytest.ini_options]
addopts = "--tb=native"
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:",
                  "default::DeprecationWarning:mkdocs_click.*:"]
testpaths = ["tests"]
